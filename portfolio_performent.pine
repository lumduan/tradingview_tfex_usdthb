//@version=6
indicator("สรุปผลการดำเนินงานของพอร์ตการลงทุน", overlay = true)

// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// |                                   FUNCTIONS                                |
// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// Get Currency Format
currency(currency_val) =>
    str.format("฿{0, number, #,###.#}", currency_val)

// Get Tbale Location & Size
locNsze(x) => 
    y   = str.split(str.lower(x), " ")
    out = ""
    for i = 0 to array.size(y) - 1
        out := out + array.get(y, i)
        if i != array.size(y) - 1
            out := out + "_"
    out

// Get Date Time in Written Form 
timeFormat(x) =>
    x < 10 ? "0" + str.tostring(x) : str.tostring(x)

timeString(x, frmt) =>
    timeY = timeFormat(year(x))
    timeM = timeFormat(month(x))
    timeD = timeFormat(dayofmonth(x))
    
    timeY + "-" + timeM + "-" + timeD


// Convert Datetime to Quarter
timeToQuarter(timeStr) =>
    // Extract the month and year from the time string
    month_to_q = str.tonumber(str.substring(timeStr, 5, 7))
    year_to_q = str.tonumber(str.substring(timeStr, 2, 4)) // Get last two digits of the year

    // Determine the quarter
    string quarter = month_to_q <= 3 ? "Q1" : month_to_q <= 6 ? "Q2" : month_to_q <= 9 ? "Q3" : "Q4"

    // Return the quarter and year in the desired format
    quarter + "/" + str.tostring(year_to_q)

// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// |                                   INPUTS                                   |
// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Table}
// Table Position 
in_table_pos = input.string(title="ตำแหน่งตาราง", defval= "Top Right", 
                 options=["Top Right" , "Middle Right" , "Bottom Right" , 
                          "Top Center", "Middle Center", "Bottom Center", 
                          "Top Left"  , "Middle Left"  , "Bottom Left" ], 
                          group= "ตั้งค่าตาราง", inline="0")
    
// Table Size
in_table_size = input.string(title="ขนาดตาราง", defval="Small", 
                 options=["Auto",  "Huge",  "Large", "Normal", "Small", "Tiny"], 
                         group= "ตั้งค่าตาราง", inline="0")

// Table Color
tBgCol = input.color(#525252,     title="สีหัวข้อ",  group = "ตั้งค่าตาราง" , inline="1")
cBgCol = input.color(#7c7c7c,     title="สีพื้นหลังตาราง", group = "ตั้งค่าตาราง" , inline="1")
txtCol = input.color(color.white, title="สีตัวอักษร",  group = "ตั้งค่าตาราง" , inline="1")

UpCol  = input.color(color.green,  title="สีค่าตัวเลขบวก",   group = "ตั้งค่าตาราง" , inline="2")
DnCol  = input.color(color.red,    title="สีค่าตัวเลขลบ", group = "ตั้งค่าตาราง" , inline="2")

// Show / Hide
showRS = input.bool(true, title = "ตารางรายละเอียด",         group = "ตั้งค่าตาราง")
showPP = input.bool(true, title = "ตารางความเสี่ยงและผลตอบแทน", group = "ตั้งค่าตาราง")
showPI = input.bool(true, title = "ตารางผลตอบแทนของพอร์ต",  group = "ตั้งค่าตาราง")

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Plot}
// Plot Position
in_plot_pos = input.string(title="ตำแหน่งวางกราฟ", defval= "Bottom Left", 
                 options=["Top Right" , "Middle Right" , "Bottom Right" , 
                          "Top Center", "Middle Center", "Bottom Center", 
                          "Top Left"  , "Middle Left"  , "Bottom Left" ], 
                          group= "ตั้งค่ากราฟ", inline="0")

// Plot Color
pltCol  = input.color(color.gray,  title=" ",   group = "ตั้งค่ากราฟ" , inline="0")

bnchCol = input.color(color.rgb(207, 139, 29), title="ค่าอ้างอิง (Benchmark) ",   group = "ตั้งค่ากราฟ", inline="1")
prtfCol = input.color(color.rgb(0, 88, 220),  title=" Portfolio ",  group = "ตั้งค่ากราฟ", inline="1")

// Bar Size
barHigh = input.float(0.8, "ความสูงกราฟ", minval = 0.2, step= 0.01, group = "ตั้งค่ากราฟ")
barWdth = input.float(1.0, "ความกว้างกราฟ" , minval = 1,   step= 0.01, group = "ตั้งค่ากราฟ")

// Report Period
period  = input.string(title="แบ่งช่วงเวลาแบบ", defval="ไตรมาส", 
             options=["สัปดาห์",  "เดือน",  "ไตรมาส", "ปี"],   group = "ตั้งค่ากราฟ")


showPB  = input.bool(true, title = "กราฟของผลตอบแทนเทียบกับค่าอ้างอิง", group = "ตั้งค่ากราฟ")

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Performance}
sTime   =  input.time(timestamp("02 JAN 2020"), "วันที่ เริ่ม", group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")
eTime   =  input.time(timestamp("01 DEC 2050"), "วันที่ สิ้นสุด", group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")

// Capital
cptl    = input.float(100000, "เงินลงทุนเริ่มต้น (Initial Capital)", minval = 0,  group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")

// Benchmark
s00     = input.symbol("SET", title = "ค่ามาตรฐานอ้างอิง (Benchmark)",     group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")

// Rebalancing 
reblMrk = input.bool(false, title = "ปรับสมดุลพอร์ตทุก (Rebalance)", inline = "1", group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")
rebl    = input.string("ไตรมาส", title= "",  options=["เดือน",  "ไตรมาส", "ปี"], 
                                                   inline = "1", group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")

// Adjust Price
adjst   = input.bool(true, title = "รวมเงินปันผล (Adjust Stock Price for Dividends)", group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")

// Risk Free
riskFree = input.symbol("TH10Y", title = "ผลตอบแทนปราศจากความเสี่ยง (Risk Free)", group = "ตั้งค่าเงินลงทุน วันเริ่ม/จบ การปรับพอร์ต")

// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// |                                  SYMBOLS                                   |
// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
//  Symbols Checkmark
u01 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s01")
u02 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s02")
u03 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s03")
u04 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s04")
u05 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s05")
u06 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s06")
u07 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s07")
u08 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s08")
u09 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s09")
u10 = input.bool(true,  title = "", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s10")


// Symbols Weight
w01 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s01")
w02 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s02")
w03 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s03")
w04 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s04")
w05 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s05")
w06 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s06")
w07 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s07")
w08 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s08")
w09 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s09")
w10 = input.float(10, title = "", minval = 0, group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s10")


// Symbols 
s01 = input.symbol("SET:PTT", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s01")
s02 = input.symbol("SET:ADVANC", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s02")
s03 = input.symbol("SET:AOT", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s03")
s04 = input.symbol("SET:GULF", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s04")
s05 = input.symbol("SET:CPALL", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s05")
s06 = input.symbol("SET:SCB", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s06")
s07 = input.symbol("SET:MINT", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s07")
s08 = input.symbol("SET:BDMS", title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s08")
s09 = input.symbol("SET:CPN",  title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s09")
s10 = input.symbol("SET:SCC",  title = "% ", group = "เลือกสินทรัพย์ และสัดส่วนในพอร์ต", inline = "s10")

// Get Symbols ID
only_symbol(s) => 
    array.get(str.split(s, ":"), 1)

id_symbol(s)=>
    switch s
        0  => only_symbol(s00)
        1  => only_symbol(s01)
        2  => only_symbol(s02)
        3  => only_symbol(s03)
        4  => only_symbol(s04)
        5  => only_symbol(s05)
        6  => only_symbol(s06)
        7  => only_symbol(s07)
        8  => only_symbol(s08)
        9  => only_symbol(s09)
        10 => only_symbol(s10)


// +++++++++++++++++++++++++++++++++++++++++++++++++ {Importing Data}
// Get Asjusted Price
adjPrc(x) =>
    adjst ? '={"adjustment":"dividends", "symbol":"' + x + '"}' : x

ss    = syminfo.session
// [1] Benchmark Ticker
cls00 = request.security(adjPrc(s00), timeframe.period, close)

// [2] Portfolio Tickers
cls01 = request.security(ticker.modify(adjPrc(s01), ss), timeframe.period, u01 ? close : na)
cls02 = request.security(ticker.modify(adjPrc(s02), ss), timeframe.period, u02 ? close : na)
cls03 = request.security(ticker.modify(adjPrc(s03), ss), timeframe.period, u03 ? close : na)
cls04 = request.security(ticker.modify(adjPrc(s04), ss), timeframe.period, u04 ? close : na)
cls05 = request.security(ticker.modify(adjPrc(s05), ss), timeframe.period, u05 ? close : na)
cls06 = request.security(ticker.modify(adjPrc(s06), ss), timeframe.period, u06 ? close : na)
cls07 = request.security(ticker.modify(adjPrc(s07), ss), timeframe.period, u07 ? close : na)
cls08 = request.security(ticker.modify(adjPrc(s08), ss), timeframe.period, u08 ? close : na)
cls09 = request.security(ticker.modify(adjPrc(s09), ss), timeframe.period, u09 ? close : na)
cls10 = request.security(ticker.modify(adjPrc(s10), ss), timeframe.period, u10 ? close : na)


// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// |                             CALCULATION                                    |
// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|

newPeriod(prd) =>
    switch prd
        "สัปดาห์"    => "W"
    	"เดือน"   => "M"
    	"ไตรมาส" => "3M"
    	"ปี"    => "12M"

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Time - From To Investment}
var tim   = int(na)                                        // First Bar Time on Chart (Bar Index == 0)
if barstate.isfirst
    tim := time

var iTime = tim > sTime ? tim : sTime                   // Start Calculation Period 
fTime = sTime > eTime or time < eTime ? time : eTime    // End Calculation Period 


// +++++++++++++++++++++++++++++++++++++++++++++++++ {Initial Investment Wllet} 
bal = cptl    // Available Cash 
bor = 0.0     // Borrow (Margin)

var float cEQ = bal     // Current Equity
var float bEQ = bal     // Benchmark Equity

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Portfolio Matrix}
var stock_mtx = matrix.new<float>(16,  10, na) 


stockFun(row, cls, wght, EQ) =>
    var shares  = float(na)

    var iCost   = float(na)
    var fWght   = float(na)
    var rtrn    = float(na)
    var rtrnPs  = float(na)
    fCost       = 0.0
    
    var isFrist = true
    // Set Up Matrix
    if not na(cls) and fTime >= time
        matrix.set(stock_mtx, row, 0, row)                      // Symbol
        matrix.set(stock_mtx, row, 1, wght)                     // Percentage Weight
        
        if not na(iTime[1]) and iTime <= time and isFrist 
            isFrist := false
            
            entry  = cls[1]
            matrix.set(stock_mtx, row, 2, entry)                // Entry Price
            
            shares := (EQ/entry * wght/100)                     // Number of Shares
            matrix.set(stock_mtx, row, 3, shares)
            
            iCost  := shares * entry
            matrix.set(stock_mtx, row, 4, iCost)                // Initial Stock Equity
        
        else if reblMrk and isFrist == false
            if timeframe.change(newPeriod(rebl))
                shares := (EQ/cls[1] * wght/100)                // Rebalancing

        matrix.set(stock_mtx, row, 5, cls)                      // Current Price
        
        fCost := shares * cls
        matrix.set(stock_mtx, row, 6, fCost)                    // Current Stock Equity
        
        rtrn  := nz(rtrn) + (shares * (cls - cls[1]))
        matrix.set(stock_mtx, row, 7, rtrn)                     // Return P&L
        
        fWght := (shares * cls[1])/EQ
        matrix.set(stock_mtx, row, 8, fWght * 100)              // Weighted of Portfolio 
        
        matrix.set(stock_mtx, row, 9, shares)


// Fill Up Benchmark
stockFun( 0, cls00, 100, bEQ)

// Fill Up Portfolio
stockFun( 1, cls01, w01, cEQ)
stockFun( 2, cls02, w02, cEQ)
stockFun( 3, cls03, w03, cEQ)
stockFun( 4, cls04, w04, cEQ)
stockFun( 5, cls05, w05, cEQ)
stockFun( 6, cls06, w06, cEQ)
stockFun( 7, cls07, w07, cEQ)
stockFun( 8, cls08, w08, cEQ)
stockFun( 9, cls09, w09, cEQ)
stockFun(10, cls10, w10, cEQ)



// Take Benchmark out of matrix
stock_mtx2 = matrix.copy(stock_mtx)
bnchmrk    = matrix.remove_row(stock_mtx2, 0)

if barstate.islast
    // Remove Unchecked Symbol 
    i= 0 
    while i <= matrix.rows(stock_mtx2) - 1
        if na(matrix.get(stock_mtx2, i, 0))
            matrix.remove_row(stock_mtx2, i)
            i := i
        else 
            i := i + 1

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Update Investment Balance} 
bal := bal - nz(array.sum(matrix.col(stock_mtx2, 4)))
bor := bal < 0 ? math.abs(bal) : 0

cEQ := bal  + nz(array.sum(matrix.col(stock_mtx2, 6)))              // Porfolio
bEQ := cptl - nz(array.get(bnchmrk, 4)) + nz(array.get(bnchmrk, 6)) // Benchmark

// +++++++++++++++++++++++++++++++++++++++++++++++++ {Performance Matrix} 
performance_mtx = matrix.new<string>(9,  3, na) 

matrix.set(performance_mtx, 0, 0, "ประสิทธิภาพ")
matrix.set(performance_mtx, 0, 1,   "Portfolio")
matrix.set(performance_mtx, 0, 2,   "Benchmark")


// [1] Total Return
rtrn(x, y)=> 
    nz(x-y)

matrix.set(performance_mtx, 1, 0, "ผลตอบแทน (฿)")

rtrnPrtf = rtrn(array.sum(matrix.col(stock_mtx2, 6)), array.sum(matrix.col(stock_mtx2, 4)))
matrix.set(performance_mtx, 1, 1, currency(rtrnPrtf))   // Portfolio

rtrnBnch = rtrn(array.get(bnchmrk, 6), array.get(bnchmrk, 4))
matrix.set(performance_mtx, 1, 2, currency(rtrnBnch))   // Benchmark


// [2] Total Return %
rtrnPer(x, y)=> 
    nz(x/y)

matrix.set(performance_mtx, 2, 0, "ผลตอบแทน (%)")
matrix.set(performance_mtx, 2, 1, str.tostring(rtrnPer(rtrnPrtf, cptl) * 100, "#.##") + "%")    // Portfolio
matrix.set(performance_mtx, 2, 2, str.tostring(rtrnPer(rtrnBnch, cptl) * 100, "#.##") + "%")    // Benchmark


// [3] MDD
maxMDD(equity) =>
    var maxEQ  = 0.0
    var maxDD  = 0.0
    
    maxEQ := maxEQ < equity ? equity : maxEQ
    maxDD := (equity / maxEQ - 1) > maxDD ? maxDD : (equity / maxEQ - 1)

    
matrix.set(performance_mtx, 3, 0, "การขาดทุนสูงสุด (MAX MDD)")

matrix.set(performance_mtx, 3, 1, str.tostring(maxMDD(cEQ) * 100, "#.##") + "%")                // Portfolio
matrix.set(performance_mtx, 3, 2, str.tostring(maxMDD(bEQ) * 100, "#.##") + "%")                // Benchmark


// [4] Volatility
var prtfRtrn = array.new_float(na)
var bnchRtrn = array.new_float(na)

if time >= iTime and time <= fTime
    array.push(prtfRtrn, (cEQ - cEQ[1])/cEQ[1])     // Portfolio
    array.push(bnchRtrn, (bEQ - bEQ[1])/bEQ[1])     // Benchmark

matrix.set(performance_mtx, 4, 0, "ความผันผวน (Volatility)")

stdPrtf = array.stdev(prtfRtrn)
volPrtf = stdPrtf * math.sqrt(252)                 
matrix.set(performance_mtx, 4, 1, str.tostring(volPrtf * 100, "#.##") + "%")                    // Portfolio

stdBnch = array.stdev(bnchRtrn)
volBnch = stdBnch * math.sqrt(252)                   
matrix.set(performance_mtx, 4, 2, str.tostring(volBnch * 100, "#.##") + "%")                    // Benchmark


// [5] Sharpe Ratio
returnGrowth(equity) =>
    // Number of Years since Starting Calculation
    int millisecondsInYear = 31536000000
    nY = (time - iTime) / millisecondsInYear
    
    math.pow(equity/cptl, 1/nY) - 1
    
    
matrix.set(performance_mtx, 5, 0, "ผลตอบแทนต่อความเสี่ยง (Sharpe Ratio)")

sharpPrtf = stdPrtf > 0 ? (returnGrowth(cEQ)) / volPrtf : float(na)
matrix.set(performance_mtx, 5, 1, str.tostring(sharpPrtf, "#.##"))                              // Portfolio

sharpBnch = stdBnch > 0 ? (returnGrowth(bEQ)) / volBnch : float(na)
matrix.set(performance_mtx, 5, 2, str.tostring(sharpBnch, "#.##"))                              // Benchmark


// [6] Beta
// --- Risk-Free Rate
rf = request.security(riskFree, "1D", close) / 100

matrix.set(performance_mtx, 6, 0, "ค่าความไวต่อตลาด (Beta)")

betaPrtf = (rtrnPer(rtrnPrtf, cptl) - rf)/(rtrnPer(rtrnBnch, cptl) - rf)
matrix.set(performance_mtx, 6, 1, str.tostring(betaPrtf, "#.##"))                               // Portfolio

betaBnch = (rtrnPer(rtrnBnch, cptl) - rf)/(rtrnPer(rtrnBnch, cptl) - rf)
matrix.set(performance_mtx, 6, 2, str.tostring(betaBnch, "#.##"))                               // Benchmark


// +++++++++++++++++++++++++++++++++++++++++++++++++ {Period Return} 




//  The Percentage Change Return of Selected Period
var periodRtrnPrtf = cptl * nz(array.sum(matrix.col(stock_mtx2, 1)))
var periodRtrnBnch = cptl

var rtrnPrtf_arr = array.new_float(1)
var rtrnBnch_arr = array.new_float(1)
var time_arr     = array.new_string(0)



if timeframe.change(newPeriod(period))
    periodRtrnPrtf := cEQ[1]
    periodRtrnBnch := bEQ[1]


pridPrtf = (cEQ - periodRtrnPrtf)/periodRtrnPrtf * 100
pridBnch = (bEQ - periodRtrnBnch)/periodRtrnBnch * 100


if time >= iTime and time <= fTime
    if array.size(time_arr) == 0
        if period == "ไตรมาส"
            array.push(time_arr, timeToQuarter(timeString(time, 2)))
        else
            array.push(time_arr, timeString(time, 2))
    
    if array.size(rtrnPrtf_arr) > 40
        array.shift(rtrnPrtf_arr)
        array.shift(rtrnBnch_arr)
        array.shift(time_arr)
    
    if timeframe.change(newPeriod(period))
        array.push(rtrnPrtf_arr, pridPrtf)
        array.push(rtrnBnch_arr, pridBnch)

        if period == "ไตรมาส"
            array.push(time_arr, timeToQuarter(timeString(time, 2)))
        else
            array.push(time_arr, timeString(time, 2))
    else 
        array.set(rtrnPrtf_arr, array.size(rtrnPrtf_arr)-1, pridPrtf)
        array.set(rtrnBnch_arr, array.size(rtrnBnch_arr)-1, pridBnch)


// Find the maximum number for plot scale
coeffPrtf = math.max(math.abs(array.min(rtrnPrtf_arr)), math.abs(array.max(rtrnPrtf_arr)))
coeffBnch = math.max(math.abs(array.min(rtrnBnch_arr)), math.abs(array.max(rtrnBnch_arr)))
coeff     = 30/math.max(coeffPrtf, coeffBnch)

// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// |                                   TABLE                                    |
// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|


// +++++++++++++++++++++++++++++++++++++++++++++++++ {Table}
var tbl = table.new(locNsze(in_table_pos), 3, 44, 
         frame_width  = 1,  frame_color  = color.new(color.gray, 100),
         border_width = 1,  border_color = color.new(color.gray, 100))

// Cell Function
cell(clmn, row, txt, col) =>
    tra = txt == "" ? color.new(col, 100) : color.new(col, 0)
    hgt = txt == "" ? 0.2 : 0
    
    table.cell(tbl, clmn, row, height = hgt, bgcolor = tra,
     text = txt, text_color = txtCol, text_size = locNsze(in_table_size))
   
// Color for Portfolio & Benchmark Returns
cPrtfCol = rtrnPrtf > 0 ? UpCol : rtrnPrtf < 0 ? DnCol : cBgCol
cBnchCol = rtrnBnch > 0 ? UpCol : rtrnBnch < 0 ? DnCol : cBgCol

// Get Color for Instrument Return
instCol(x) =>
    x > 0 ? UpCol : x < 0 ? DnCol : cBgCol
    
    
// +++++++++++++++++++++++++++++++++++++++++++++++++ {Plot}
var plt = table.new(position.bottom_left, 1 , 1)

// Find Number of Columns
numCol  = array.size(rtrnPrtf_arr)*3 + 2 < 23 ? 23 : array.size(rtrnPrtf_arr)*3 + 2

plt    := table.new(locNsze(in_plot_pos), numCol, 68, 
         bgcolor = color.new(pltCol, 50),
         frame_width  = 1,  frame_color  = color.new(pltCol,  0),
         border_width = 0,  border_color = color.new(txtCol, 100))

pltCell (x, y, w, h, col, tt) =>
    table.cell(plt, x, y, width = w, height = h, bgcolor = col)
    table.cell_set_tooltip(plt, x, y, tt)

yInc(y, val) =>
    table.cell(plt, 0, y-1, text = str.tostring(val, "#") + "%", 
         text_color = txtCol, text_size = size.small, width = 2, height = 0.2)
    table.merge_cells(plt, 0, y-1, 0, y+2)


// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
// |                                   OUTPUT                                   |
// |++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
if barstate.islast
    table.clear(tbl, 0, 0,          2, 43)
    table.clear(plt, 0, 0, numCol - 1, 67)

    if timeframe.period != "D" and timeframe.period != "1440"
        cell(0, 0, "เพื่อความแม่นยำให้เลือกใช้\nTimeframe '1 Day'", #8b0000)
        table.merge_cells(tbl, 0, 0, 2, 0)
    
    // Specification Table
    if showRS
        cell(0, 1, "รายละเอียด", tBgCol), table.merge_cells(tbl, 0, 1, 2, 1)
    
        cell(0, 2, "วันเริ่ม (ปี เดือน วัน)", tBgCol), cell(0, 3, timeString(iTime, 3), cBgCol)
        cell(1, 2, "วันสิ้นสุด (ปี เดือน วัน)"  , tBgCol), cell(1, 3, timeString(fTime, 3), cBgCol) 
        cell(2, 2, "จำนวนวัน", tBgCol), cell(2, 3, str.tostring(math.round((fTime-iTime)/86400000)), cBgCol)
        
        cell(0, 4, "เงินลงทุนเริ่มต้น", tBgCol), cell(0, 5, currency(cptl), cBgCol )
        cell(1, 4, "มูลค่าสินทรัพย์",          tBgCol), cell(1, 5, currency(cEQ),  cPrtfCol)
        // cell(2, 4, "หนี้สิน",            tBgCol), cell(2, 5, currency(bor),  cBgCol )
        
        // Separator 
        for i = 6 to 10
            cell(0, i, "", tBgCol), table.merge_cells(tbl, 0, i, 2, i)


    // Portfolio Performance Table
    if showPP and matrix.rows(performance_mtx) > 0
        cell(0, 11, "ความเสี่ยงและผลตอบแทน เทียบค่า Benchmark", tBgCol), table.merge_cells(tbl, 0, 11, 2, 11)
        
        cell(0, 12, matrix.get(performance_mtx, 0, 0),                     tBgCol)
        cell(1, 12, matrix.get(performance_mtx, 0, 1),  showPB ? prtfCol : tBgCol)
        cell(2, 12, id_symbol(0),                       showPB ? bnchCol : tBgCol)
        
        for i = 1 to matrix.rows(performance_mtx) -1
            cell(0, 13 + i, matrix.get(performance_mtx, i, 0), tBgCol)
            cell(1, 13 + i, matrix.get(performance_mtx, i, 1), i == 1 or i == 2 ? cPrtfCol : cBgCol) 
            cell(2, 13 + i, matrix.get(performance_mtx, i, 2), i == 1 or i == 2 ? cBnchCol : cBgCol)
        
        // Separator
        for i = 20 to 24
            cell(0, i, "", tBgCol), table.merge_cells(tbl, 0, i, 2, i)


    // Instrument Portfolio
    if showPI and matrix.rows(stock_mtx2) > 0
        cell(0, 25, "ผลตอบแทนของพอร์ต", tBgCol), table.merge_cells(tbl, 0, 25, 2, 25)
        
        cell(0, 26, "สินทรัพย์",                 tBgCol)
        cell(1, 26, "ผลตอบแทนถ่วงน้ำหนัก\nWeighted Return (%)",       tBgCol)
        cell(2, 26, "สัดส่วนในพอร์ต\nWeighted of Portfolio (%)", tBgCol)
        
        if matrix.rows(stock_mtx2) > 0
            for i = 0 to matrix.rows(stock_mtx2) - 1
                instCol = instCol(matrix.get(stock_mtx2, i, 7))
                
                cell(0, 27 + i, id_symbol(matrix.get(stock_mtx2, i, 0)),                              tBgCol)
                cell(1, 27 + i, str.tostring(matrix.get(stock_mtx2, i, 7)/cptl * 100, "#.##") + "%", instCol)
                cell(2, 27 + i, str.tostring(matrix.get(stock_mtx2, i, 8),            "#.##") + "%", instCol)
                

    if showPB and array.size(rtrnPrtf_arr) > 0
        
        // Reset Table. 
        for i = 0 to numCol - 1
            for j = 0 to 67
                pltCell(i, j, 0.001, 0.001, color.new(txtCol, 100), "")

        w = 0, 
        for i = 2 to (array.size(rtrnPrtf_arr)) * 3 + 1 by 3
            
            // Portfolio - Plot Columns 
            for k = 0 to math.round(coeff * array.get(rtrnPrtf_arr, w))
                pltCell(i,   array.get(rtrnPrtf_arr, w) > 0 ? 33 - k : 
                             array.get(rtrnPrtf_arr, w) < 0 ? 35 - k : 34,
                             barWdth, barHigh, color.new(prtfCol, 0), 
                             str.tostring(array.get(rtrnPrtf_arr, w), "#.##")+"%")
                
                pltCell(i,   array.get(rtrnPrtf_arr, w) > 0 ? 35 + k : 
                             array.get(rtrnPrtf_arr, w) < 0 ? 33 + k : 34,
                             barWdth, barHigh, color.new(prtfCol, 100), "")
   
            // Benchmark - Plot Columns
            for h = 0 to math.round(coeff * array.get(rtrnBnch_arr, w))
                pltCell(i+1, array.get(rtrnBnch_arr, w) > 0 ? 33 - h : 
                             array.get(rtrnBnch_arr, w) < 0 ? 35 - h : 34, 
                             barWdth, barHigh, color.new(bnchCol, 0), 
                             str.tostring(array.get(rtrnBnch_arr, w), "#.##")+"%")
                
                pltCell(i+1, array.get(rtrnBnch_arr, w) > 0 ? 35 + h : 
                             array.get(rtrnBnch_arr, w) < 0 ? 33 + h : 34, 
                             barWdth, barHigh, color.new(bnchCol, 100), "")
                
                
            // Label X Axis
            table.cell(plt, i, 67, width = barWdth, text = array.get(time_arr, w), 
                 text_color = txtCol, text_size = size.tiny)
            table.merge_cells(plt, i, 67, i+1, 67)

            w:= w + 1
            
        // Plot Highlighted Color Between Columns
        for i = 1 to (array.size(rtrnPrtf_arr))*3 + 1 by 3
            for j = 0 to 67
                pltCell(i, j, 0.3, 0.001, color.new(pltCol, 94), "")
       
        // Draw X Axis Line
        for i = 2 to (array.size(rtrnPrtf_arr))*3 
            pltCell(i, 34, 0.3, 0.005, color.new(color.silver, 0), "")
        
        // Label Y Axis
        table.cell(plt, 0, 1, width = barWdth, height = 1)
        yInc( 1,  math.ceil(30/coeff))
        yInc(16, math.round(15/coeff))
        
        yInc(33, 0/coeff)
        
        yInc(50, math.round(-15/coeff))
        yInc(64, math.floor(-30/coeff))
    
        // Title
        table.cell(plt, 1, 0, width = barWdth, height = 2, 
             bgcolor = color.new(color.black, 100), text_halign = text.align_left, 
             text_valign = text.align_top, text = " ผลตอบแทนราย" + period , 
             text_color = txtCol, text_size = size.small)
        table.merge_cells(plt, 1, 0, numCol - 1, 0)


